using Microsoft.AspNetCore.Mvc.ModelBinding;  
using System;  
using System.Threading.Tasks;  
  
namespace ModelBinder.ModelBinder  
{  
    public class CustomModelBinder : IModelBinder  
    {  
        public Task BindModelAsync(ModelBindingContext bindingContext)  
        {  
            throw new NotImplementedException();  
        }  
    }  
}  

namespace ModelBinder  
{  
    using Microsoft.AspNetCore.Mvc.ModelBinding;  
    using ModelBinder.Model;  
    using Newtonsoft.Json.Linq;  
    using System;  
    using System.IO;  
    using System.Threading.Tasks;  
  
    public class CustomModelBinder1 : IModelBinder  
    {  
        public Task BindModelAsync(ModelBindingContext bindingContext)  
        {  
            if (bindingContext == null)  
                throw new ArgumentNullException(nameof(bindingContext));  
  
            string valueFromBody = string.Empty;  
  
            using (var sr = new StreamReader(bindingContext.HttpContext.Request.Body))  
            {  
                valueFromBody = sr.ReadToEnd();  
            }  
  
            if (string.IsNullOrEmpty(valueFromBody))  
            {  
                return Task.CompletedTask;  
            }  
  
            string values = Convert.ToString(((JValue)JObject.Parse(valueFromBody)["value"]).Value);  
  
            var splitData = values.Split(new char[] { '|' });  
            if (splitData.Length >= 2)  
            {  
                var result = new User1  
                {  
                    Id = Convert.ToInt32(splitData[0]),  
                    Name = splitData[1]  
                };  
                bindingContext.Result = ModelBindingResult.Success(result);  
            }  
  
            return Task.CompletedTask;  
        }  
    }  
} 

namespace ModelBinder.Model  
{  
    using Microsoft.AspNetCore.Mvc;  
          
    [ModelBinder(BinderType = typeof(CustomModelBinder))]  
    public class User  
    {  
        public int Id { get; set; }  
        public string Name { get; set; }  
        public string Address { get; set; }  
    }  
}

[HttpGet]  
[Route("test")]  
public IActionResult Index([ModelBinder(BinderType = typeof(CustomModelBinder))]User u)  
{  
  
    return View();  
}

namespace ModelBinder  
{  
    using Microsoft.AspNetCore.Mvc.ModelBinding;  
    using ModelBinder.Model;  
  
    public class CustomModelBinderProvider : IModelBinderProvider  
    {  
        public IModelBinder GetBinder(ModelBinderProviderContext context)  
        {  
            if (context.Metadata.ModelType == typeof(User))  
                return new CustomModelBinder();  
  
            return null;  
        }  
    }  
}  

public void ConfigureServices(IServiceCollection services)  
{   
    services.AddMvc(  
        config => config.ModelBinderProviders.Insert(0, new CustomModelBinderProvider())  
    );  
}  

